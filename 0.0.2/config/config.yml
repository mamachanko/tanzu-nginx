#@ load("@ytt:data", "data")

#@ def labels():
app: nginx
#@ end

#@ def initDelay():
#@   return """
#@   set -euo pipefail
#@   echo "Delaying startup by {delay}s..."
#@   sleep {delay}
#@   echo "Let's go!"
#@   """.strip().format(delay=data.values.delay)
#@ end
---
apiVersion: v1
kind: Namespace
metadata:
  name: nginx
  namespace: nginx
  labels: #@ labels()
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: nginx
  labels: #@ labels()
data:
  index.html: #@ data.values.html
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: nginx
  labels: #@ labels()
spec:
  replicas: #@ data.values.replicas
  selector:
    matchLabels: #@ labels()
  template:
    metadata:
      labels: #@ labels()
    spec:
      imagePullSecrets:
        - name: dockerhub-credentials
      initContainers:
        - image: alpine:3.14.2
          name: delay
          command:
            - /bin/sh
            - -c
            - #@ initDelay()
      containers:
        - image: nginx:1.20.1-alpine
          name: nginx
          volumeMounts:
            - name: html
              mountPath: /usr/share/nginx/html
      volumes:
        - name: html
          configMap:
            name: nginx
            items:
              - key: index.html
                path: index.html
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: nginx
  labels: #@ labels()
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector: #@ labels()
---
apiVersion: v1
kind: Secret
metadata:
  name: dockerhub-credentials
  namespace: nginx
  annotations:
    secretgen.carvel.dev/image-pull-secret: ""
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: e30K
